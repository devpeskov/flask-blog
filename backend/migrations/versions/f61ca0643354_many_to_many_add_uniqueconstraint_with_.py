"""Many to Many: Add UniqueConstraint with both columns

Revision ID: f61ca0643354
Revises: 5079b22c0c77
Create Date: 2023-01-27 00:16:31.268766

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f61ca0643354'
down_revision = '5079b22c0c77'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('post_tags', schema=None) as batch_op:
        batch_op.create_unique_constraint('post_tags_unique_key', ['post_id', 'tag_id'])

    with op.batch_alter_table('roles_users', schema=None) as batch_op:
        batch_op.create_unique_constraint('roles_users_unique_key', ['user_id', 'role_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('roles_users', schema=None) as batch_op:
        batch_op.drop_constraint('roles_users_unique_key', type_='unique')

    with op.batch_alter_table('post_tags', schema=None) as batch_op:
        batch_op.drop_constraint('post_tags_unique_key', type_='unique')

    # ### end Alembic commands ###
